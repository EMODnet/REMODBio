offset <-seq(from = 0, to =  100000000, by = ((100000000 - 0)/(20000 - 1)
))
offset
offset <-seq(from = 0, to =  100000000, by = 20000)
offset
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%2020000%20OFFSET%20", offset ,"%20;where:")
geolayer = "eurobis-obisenv"
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%2020000%20OFFSET%20", offset ,"%20;where:")
wfsprefix
wfsprefix[1]
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%2020000%20OFFSET%20", offset ,"%20;where:")
wfssuffix <-"&outputformat=csv"
dasid = 5885
aphiaid = NA
startyear = NA
endyear = NA
type="full"
geourl = NA
if (type == "full") {
geolayer = "eurobis-obisenv"
} else if (type == "basic") {
geolayer = "eurobis-obisenv_basic"
}
offset <-seq(from = 0, to =  100000000, by = 20000)
if(any(is.na(geourl)) & any(is.na(dasid)) & any(is.na(aphiaid))) {print("please provide geourl dasid or aphiaid")
}
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%2020000%20OFFSET%20", offset ,"%20;where:")
if(!is.na(geourl)) {
if (any(grepl("propertyName", geourl))) {
wfssuffix <- paste0("+AND+",sectioninstring (geourl, starchar="Params=where", n=-15, endchar = "propertyName=", m=2 ),"&outputformat=csv")} else {
wfssuffix <- paste0("+AND+",richtfrom(geourl, 'Params=where',14))
}   } else {
wfssuffix <-"&outputformat=csv"
}
wfssuffix
if (any(!is.na(dasid)))  { datasetpart <- paste0("datasetid=", dasid, "+AND+")
} else {datasetpart <-"" }
datasetpart
if (any(!is.na(aphiaid))) { aphiapart <- paste0("(aphiaid=",aphiaid,"+OR+aphiaidaccepted=",aphiaid,")+AND+")
} else {aphiapart <-"" }
aphiapart
if (!is.na(endyear), is.na(startyear)) { startyear = 1850}
if (is.na(endyear), !is.na(startyear)) { endyear = format(Sys.Date(), "%Y")}
if (!is.na(endyear) & is.na(startyear)) { startyear = 1850}
if (is.na(endyear)& !is.na(startyear)) { endyear = format(Sys.Date(), "%Y")}
if (!is.na(startyear), !is.na(endyear)) {
yearcollectedpart <- paste0("%28%28yearcollected+BETWEEN+%27+",startyear, "%27+AND+%27"endyear,"%27%29%29")
} else {yearcollectedpart <- ""}
if (!is.na(startyear) & !is.na(endyear)) {
yearcollectedpart <- paste0("%28%28yearcollected+BETWEEN+%27+",startyear, "%27+AND+%27"endyear,"%27%29%29")
} else {yearcollectedpart <- ""}
!is.na(startyear) & !is.na(endyear)
yearcollectedpart <- paste0("%28%28yearcollected+BETWEEN+%27+",startyear, "%27+AND+%27"endyear,"%27%29%29")
yearcollectedpart <- paste0("%28%28yearcollected+BETWEEN+%27+",startyear, "%27+AND+%27" , endyear,"%27%29%29")
if (!is.na(startyear) & !is.na(endyear)) {
yearcollectedpart <- paste0("%28%28yearcollected+BETWEEN+%27+",startyear, "%27+AND+%27" , endyear,"%27%29%29")
} else { yearcollectedpart <- "" }
yearcollectedpart
wfsurl <-  paste0(wfsprefix, datasetpart, aphiapart, yearcollectedpart, wfssuffix)
wfsurl
wfsurl[1]
datasetpart <- paste0("datasetid=", dasid)
wfsurl <-  paste0(wfsprefix, datasetpart, wfssuffix)
wfsurl[1]
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%205000%20OFFSET%20", offset ,"%20;where:")
wfsurl <-  paste0(wfsprefix, datasetpart, wfssuffix)
wfsurl[1]
wfsurls = wfsurl
wfsurls
for  (j in wfsurls) {
print(j)
tryCatch({emoddata <- read.csv(j)}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
} else {
break        }
}
rm(emoddata)
}
comemoddata
for  (j in wfsurls) {
print(j)
tryCatch({emoddata <- read.csv(j)}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
} else {
comemoddata <-  emoddata    }
} else {break}
}
offset <-seq(from = 0, to =  100000000, by = 5000)
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%205000%20OFFSET%20", offset ,"%20;where:")
wfsurl <-  paste0(wfsprefix, datasetpart, wfssuffix)
rm(emoddata)
for  (j in wfsurls) {
print(j)
tryCatch({emoddata <- read.csv(j)}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
rm(emoddata)
} else {
comemoddata <-  emoddata
rm(emoddata)}
} else {break}
}
require(dplyr)
for  (j in wfsurls) {
print(j)
tryCatch({emoddata <- read.csv(j)}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
rm(emoddata)
} else {
comemoddata <-  emoddata
rm(emoddata)}
} else {break}
}
rm(emoddata)}
rm(comemoddata)
offset <-seq(from = 0, to =  100000000, by = 5000)
offset
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%205000%20OFFSET%20", offset ,"%20;where:")
wfsprefix[2]
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%205000%20OFFSET%20", offset ,"%20;where:")
wfsurl <-  paste0(wfsprefix, datasetpart, wfssuffix)
wfsurls = wfsurl
rm(emoddata)
for  (j in wfsurls) {
print(j)
tryCatch({emoddata <- read.csv(j)}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
rm(emoddata)
} else {
comemoddata <-  emoddata
rm(emoddata)}
} else {break}
}
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%20", offset[2] ,"%20OFFSET%20", offset ,"%20;where:")
wfsprefix[1]
offset <-seq(from = 0, to =  100000000, by = 20000)
wfsprefix <-paste0("http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Dataportal%3A",geolayer,"&viewParams=%20order:%20ORDER%20BY%20obs.id%20LIMIT%20", offset[2] ,"%20OFFSET%20", offset ,"%20;where:")
wfsprefix[1]
length(wfsurls)
for  (j in 1:length(wfsurls)) {
print(j)
tryCatch({emoddata <- read.csv(wfsurls[j])}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
rm(emoddata)
} else {
comemoddata <-  emoddata
rm(emoddata)}
} else {break}
}
j-1*20000
for  (j in 1:length(wfsurls)) {
print(past0("getting ", j-1*20000, "-", j*20000, " records"))
tryCatch({emoddata <- read.csv(wfsurls[j])}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
rm(emoddata)
} else {
comemoddata <-  emoddata
rm(emoddata)}
} else {break}
}
for  (j in 1:length(wfsurls)) {
print(paste0("getting ", j-1*20000, "-", j*20000, " records"))
tryCatch({emoddata <- read.csv(wfsurls[j])}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
rm(emoddata)
} else {
comemoddata <-  emoddata
rm(emoddata)}
} else {break}
}
for  (j in 1:length(wfsurls)) {
print(paste0("getting ", (j-1)*20000, "-", j*20000, " records"))
tryCatch({emoddata <- read.csv(wfsurls[j])}, error = function(e) {
file <-  paste0("emodnetbiodata",Sys.Date(),".csv")
options(timeout=10000)
download.file(j, file, method="internal", cacheOK = FALSE)
emoddata <-read.csv(file, stringsAsFactors = FALSE)
file.remove(file)
rm(file)
})
if ( nrow(emoddata) > 0 & length(emoddata) > 2 ){
emoddata <- data.frame(lapply(emoddata, as.character), stringsAsFactors=FALSE)
if (exists("comemoddata")){
comemoddata <- bind_rows(comemoddata, emoddata)
rm(emoddata)
} else {
comemoddata <-  emoddata
rm(emoddata)}
} else {break}
}
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart},
if (!is.na(datasetpart), !is.na(aphiapart)) {"+AND+",aphiapart } else
if (is.na(datasetpart), !is.na(aphiapart)) {aphiapart},
if (!is.na(aphiapart), !is.na(yearcollectedpart)) {"+AND+",yearcollectedpart } else
if (is.na(datasetpart), is.na(aphiapart), !is.na(yearcollectedpart)) {yearcollectedpart}
)
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} )
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} ,
if (!is.na(datasetpart), !is.na(aphiapart)) {"+AND+",aphiapart } else {
if (is.na(datasetpart), !is.na(aphiapart)) {aphiapart}},
if (!is.na(aphiapart), !is.na(yearcollectedpart)) {"+AND+",yearcollectedpart } else {
if (is.na(datasetpart), is.na(aphiapart), !is.na(yearcollectedpart)) {yearcollectedpart}}
)
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} ,
if (!is.na(datasetpart), !is.na(aphiapart)) {"+AND+",aphiapart })
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} ,
if (!is.na(datasetpart) & !is.na(aphiapart)) {"+AND+",aphiapart} )
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart}
if (!is.na(datasetpart) & !is.na(aphiapart)) {"+AND+", aphiapart} )
if (!is.na(datasetpart) & !is.na(aphiapart)) {"+AND+", aphiapart}
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} ,
if (!is.na(datasetpart) & !is.na(aphiapart)) {paste0("+AND+", aphiapart)} )
middlepart
aphiapart
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} ,
if (!is.na(datasetpart) & !is.na(aphiapart)) {paste0("+AND+", aphiapart)} ) else {
if (is.na(datasetpart) & !is.na(aphiapart)) {aphiapart}},
if (!is.na(aphiapart)& !is.na(yearcollectedpart)) {paste0("+AND+",yearcollectedpart)} else {
if (is.na(datasetpart)& is.na(aphiapart)& !is.na(yearcollectedpart)) {yearcollectedpart}}
)
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} ,
if (!is.na(datasetpart) & !is.na(aphiapart)) {paste0("+AND+", aphiapart)}  else {
if (is.na(datasetpart) & !is.na(aphiapart)) {aphiapart}},
if (!is.na(aphiapart)& !is.na(yearcollectedpart)) {paste0("+AND+",yearcollectedpart)} else {
if (is.na(datasetpart)& is.na(aphiapart)& !is.na(yearcollectedpart)) {yearcollectedpart}}
)
middlepart
aphiaid = NA
endyear = NA
startyear = NA
if (!is.na(endyear) & is.na(startyear)) { startyear = 1850}
if (is.na(endyear)& !is.na(startyear)) { endyear = format(Sys.Date(), "%Y")}
if (!is.na(startyear) & !is.na(endyear)) {
yearcollectedpart <- paste0("%28%28yearcollected+BETWEEN+%27+",startyear, "%27+AND+%27" , endyear,"%27%29%29")
}
yearcollectedpart
yearcollectedpart <-NA
if (!is.na(endyear) & is.na(startyear)) { startyear = 1850}
if (is.na(endyear)& !is.na(startyear)) { endyear = format(Sys.Date(), "%Y")}
if (!is.na(startyear) & !is.na(endyear)) {
yearcollectedpart <- paste0("%28%28yearcollected+BETWEEN+%27+",startyear, "%27+AND+%27" , endyear,"%27%29%29")
} else {yearcollectedpart <- NA}
middlepart <- paste0(
if (!is.na(datasetpart)) {datasetpart} ,
if (!is.na(datasetpart) & !is.na(aphiapart)) {paste0("+AND+", aphiapart)}  else {
if (is.na(datasetpart) & !is.na(aphiapart)) {aphiapart}},
if (!is.na(aphiapart)& !is.na(yearcollectedpart)) {paste0("+AND+",yearcollectedpart)} else {
if (is.na(datasetpart)& is.na(aphiapart)& !is.na(yearcollectedpart)) {yearcollectedpart}}
)
middlepart
aphiapart
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} ,
if (exists("datasetpart") & exists("aphiapart"))) {paste0("+AND+", aphiapart)}  else {
if (exists("datasetpart") = FALSE & exists("aphiapart")) {aphiapart}},
if ( exists("aphiapart") & exists("yearcollectedpart")) {paste0("+AND+",yearcollectedpart)} else {
if (exists("datasetpart") = FALSE & exists("aphiapart") = FALSE  & exists("yearcollectedpart")) {yearcollectedpart}}
)
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} ,
if (exists("datasetpart") & exists("aphiapart"))) {paste0("+AND+", aphiapart)} )
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} ,
if (exists("datasetpart") & exists("aphiapart")) {paste0("+AND+", aphiapart)}   else {
if (exists("datasetpart") = FALSE & exists("aphiapart")) {aphiapart}},
if ( exists("aphiapart") & exists("yearcollectedpart")) {paste0("+AND+",yearcollectedpart)} else {
if (exists("datasetpart") = FALSE & exists("aphiapart") = FALSE  & exists("yearcollectedpart")) {yearcollectedpart}}
)
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} ,
if (exists("datasetpart") & exists("aphiapart")) {paste0("+AND+", aphiapart)}   else {
if (exists("datasetpart") = FALSE & exists("aphiapart")) {aphiapart}} )
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} )
exists("datasetpart")
exists("aphiapart")
exists("datasetpart") & exists("aphiapart")
if (exists("datasetpart") & exists("aphiapart")) {paste0("+AND+", aphiapart)}
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} ,
if (exists("datasetpart") & exists("aphiapart")) {paste0("+AND+", aphiapart)} )
if (exists("datasetpart") = FALSE & exists("aphiapart")) {aphiapart}
exists("datasetpart") = FALSE
!exists("datasetpart")
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} ,
if (exists("datasetpart") & exists("aphiapart")) {paste0("+AND+", aphiapart)} else {
if ( !exists("datasetpart") & exists("aphiapart")) {aphiapart}} ,
if ( exists("aphiapart") & exists("yearcollectedpart")) {paste0("+AND+",yearcollectedpart)} else {
if (!exists("datasetpart") & !exists("aphiapart") & exists("yearcollectedpart")) {yearcollectedpart}}
)
middlepart
rm(aphiapart,yearcollectedpart)
middlepart <- paste0(
if (exists("datasetpart")) {datasetpart} ,
if (exists("datasetpart") & exists("aphiapart")) {paste0("+AND+", aphiapart)} else {
if ( !exists("datasetpart") & exists("aphiapart")) {aphiapart}} ,
if ( exists("aphiapart") & exists("yearcollectedpart")) {paste0("+AND+",yearcollectedpart)} else {
if (!exists("datasetpart") & !exists("aphiapart") & exists("yearcollectedpart")) {yearcollectedpart}}
)
middlepart
wfsurl <-  paste0(wfsprefix, middlepart, wfssuffix)
library("devtools")
library("roxygen2")
getwd()
setwd("./REMODBio")
document()
document()
setwd("..")
install("REMODBio")
require("REMODBio")
downloaddata <- getemodbiodata(dasid = c("1884","618", "5780", "5885" ),  startyear = "1990", endyear = "2018")
View(downloaddata$meta %>% distinct())
View(downloaddata$datasets %>% distinct())
View(downloaddata$data %>% distinct())
downloaddata <- getemodbiodata(dasid = "1884", type ="basic")
View(downloaddata$meta )
View(downloaddata$datasets )
View(downloaddata$data %>% )
View(downloaddata$data  )
rm(comemoddata)
rm(emoddata)
downloaddata <- getemodbiodata(dasid = "1884", type ="basic")
write.csv(downloaddata$meta, "meta.csv")
write.csv(downloaddata$datasets, "datasets.csv")
write.csv(downloaddata$datasets, "datasets.csv")
write.csv(downloaddata$data, "data.csv")
rm(downloaddata)
downloaddata <- getemodbiodata(dasid = "1884", type ="basic")
View(downloaddata$data  )
View(downloaddata$meta )
View(downloaddata$datasets )
downloaddata <- getemodbiodata(startyear = "2012", aphiaid = "141433")
downloaddata <- getemodbiodata( aphiaid = "141433")
rm(list-ls())
rm(list=ls())
downloaddata <- getemodbiodata( aphiaid = "141433")
View(downloaddata$meta )
View(downloaddata$datasets )
View(downloaddata$data  )
?getemodbiodata
downloaddata <- getemodbiodata(dasid = "5725", startyear = "2012", type = "basic" )
downloaddata <- getemodbiodata(dasid = "5725",  type = "basic" )
View(downloaddata$datasets )
View(downloaddata$data  )
rm(downloaddata)
downloaddata <- getemodbiodata(geourl = "http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.1.0&request=GetFeature&typeName=Dataportal%3Aeurobis-obisenv&resultType=results&viewParams=where%3Adatasetid+IN+%285885%29%3Bcontext%3A0100&outputFormat=csv")
downloaddata <- getemodbiodata(dasid = "5885", aphiaid = "105812",  geourl = "http://geo.vliz.be/geoserver/wfs/ows?service=WFS&version=1.1.0&request=GetFeature&typeName=Dataportal%3Aeurobis-obisenv&resultType=results&viewParams=where%3Adatasetid+IN+%285885%29%3Bcontext%3A0100&outputFormat=csv")
write.csv(downloaddata$data, "data.csv")
View(downloaddata$data  )
library(mregions)
?mr_names
rnames <- mr_names("MarineRegions:eez_boundaries") %>% dplyr::select(mrgid, name)
require(dplyr)
require(tidyr)
require(stringr)
rnames <- mr_names("MarineRegions:eez_boundaries") %>% dplyr::select(mrgid, name)
rnames <- mr_names("MarineRegions:eez_boundaries")
View(rnames)
rnames2 <- mr_names("MarineRegions:iho")
View(rnames2)
View(rnames)
res <- mr_names("MarineRegions:eez")
View(res)
functionsandpositions <- read.csv("C:/Users/daphnisd/Desktop/R packages/Data manipulations/maps/functionalgroupandcoords.csv", stringsAsFactors = FALSE) %>% mutate(uniqueid = row_number(),
(uniqueid = row_number(),
geoobjectsids = str_replace(geoobjectsids, "\\[", "" ),
geoobjectsids = str_replace(geoobjectsids, "\\]", "" )
)
functionsandpositions <- read.csv("C:/Users/daphnisd/Desktop/R packages/Data manipulations/maps/functionalgroupandcoords.csv", stringsAsFactors = FALSE) %>% mutate(uniqueid = row_number(),
geoobjectsids = str_replace(geoobjectsids, "\\[", "" ),
geoobjectsids = str_replace(geoobjectsids, "\\]", "" )
)
withduplicates <- functionsandpositions %>%
mutate(geoobjectsids = strsplit(as.character(geoobjectsids), ",")) %>%
unnest(geoobjectsids) %>% mutate( geoobjectsids = trimws(geoobjectsids))
eez <- mr_names("MarineRegions:eez") %>% dplyr::select(mrgid, name)
onlyeez <- withduplicates %>% inner_join (eez, by = c("geoobjectsids" = "mrgid"))
EEZs <- onlyeez %>% dplyr::select (mrgid = geoobjectsids, name) %>% distinct()
fao <- mr_names("MarineRegions:fao") %>% dplyr::select(mrgid, name)
onlyFAO <- withduplicates %>% inner_join (fao, by = c("geoobjectsids" = "mrgid"))
FAOareas <- onlyFAO %>% dplyr::select (mrgid = geoobjectsids, name) %>% distinct()
eez <- mr_names("MarineRegions:eez") %>% dplyr::select(mrgid, name)
eez <- mr_names("MarineRegions:eez")
View(eez)
eez <- mr_names("MarineRegions:eez") %>% dplyr::select(mrgid, name = geoname)
onlyeez <- withduplicates %>% inner_join (eez, by = c("geoobjectsids" = "mrgid"))
EEZs <- onlyeez %>% dplyr::select (mrgid = geoobjectsids, name) %>% distinct()
fao <- mr_names("MarineRegions:fao") %>% dplyr::select(mrgid, name = geoname)
onlyFAO <- withduplicates %>% inner_join (fao, by = c("geoobjectsids" = "mrgid"))
FAOareas <- onlyFAO %>% dplyr::select (mrgid = geoobjectsids, name) %>% distinct()
fao <- mr_names("MarineRegions:fao")
View(fao)
fao <- mr_names("MarineRegions:fao") %>% dplyr::select(mrgid, name )
onlyFAO <- withduplicates %>% inner_join (fao, by = c("geoobjectsids" = "mrgid"))
FAOareas <- onlyFAO %>% dplyr::select (mrgid = geoobjectsids, name) %>% distinct()
library("devtools")
library("roxygen2")
setwd("./REMODBio")
use_data(EEZs, overwrite = TRUE)
use_data(FAOareas, overwrite = TRUE)
lme <- mr_names("MarineRegions:lme") %>% dplyr::select(mrgid, name )
onlylme <- withduplicates %>% inner_join (onlylme, by = c("geoobjectsids" = "mrgid"))
LMEareas <- onlyFAO %>% dplyr::select (mrgid = geoobjectsids, name) %>% distinct()
lme <- mr_names("MarineRegions:lme")
document()
